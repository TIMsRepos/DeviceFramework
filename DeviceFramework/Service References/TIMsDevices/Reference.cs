//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TIM.Devices.Framework.TIMsDevices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaDetectedEventArgs", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Communication")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TIM.Devices.Framework.TIMsDevices.MediaRemovedEventArgs))]
    public partial class MediaDetectedEventArgs : System.EventArgs, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CheckInIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECheckInIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RangeOfCheckInIDsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceEmployeeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CheckInID {
            get {
                return this.CheckInIDField;
            }
            set {
                if ((this.CheckInIDField.Equals(value) != true)) {
                    this.CheckInIDField = value;
                    this.RaisePropertyChanged("CheckInID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECheckInID {
            get {
                return this.ECheckInIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ECheckInIDField, value) != true)) {
                    this.ECheckInIDField = value;
                    this.RaisePropertyChanged("ECheckInID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RangeOfCheckInIDsID {
            get {
                return this.RangeOfCheckInIDsIDField;
            }
            set {
                if ((this.RangeOfCheckInIDsIDField.Equals(value) != true)) {
                    this.RangeOfCheckInIDsIDField = value;
                    this.RaisePropertyChanged("RangeOfCheckInIDsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceEmployeeID {
            get {
                return this.ServiceEmployeeIDField;
            }
            set {
                if ((this.ServiceEmployeeIDField.Equals(value) != true)) {
                    this.ServiceEmployeeIDField = value;
                    this.RaisePropertyChanged("ServiceEmployeeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaRemovedEventArgs", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Communication")]
    [System.SerializableAttribute()]
    public partial class MediaRemovedEventArgs : TIM.Devices.Framework.TIMsDevices.MediaDetectedEventArgs {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaDetectedEventArgs2", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Communication")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TIM.Devices.Framework.TIMsDevices.MediaRemovedEventArgs2))]
    public partial class MediaDetectedEventArgs2 : System.EventArgs, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CheckInIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TIM.Devices.Framework.TIMsDevices.DeviceCapabilities DeviceCapabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceFrameworkDeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ECheckInIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<TIM.Devices.Framework.TIMsDevices.Payloads, object> PayloadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RangeOfCheckInIDsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServiceEmployeeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CheckInID {
            get {
                return this.CheckInIDField;
            }
            set {
                if ((this.CheckInIDField.Equals(value) != true)) {
                    this.CheckInIDField = value;
                    this.RaisePropertyChanged("CheckInID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TIM.Devices.Framework.TIMsDevices.DeviceCapabilities DeviceCapabilities {
            get {
                return this.DeviceCapabilitiesField;
            }
            set {
                if ((this.DeviceCapabilitiesField.Equals(value) != true)) {
                    this.DeviceCapabilitiesField = value;
                    this.RaisePropertyChanged("DeviceCapabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceFrameworkDeviceID {
            get {
                return this.DeviceFrameworkDeviceIDField;
            }
            set {
                if ((this.DeviceFrameworkDeviceIDField.Equals(value) != true)) {
                    this.DeviceFrameworkDeviceIDField = value;
                    this.RaisePropertyChanged("DeviceFrameworkDeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((this.DeviceIDField.Equals(value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ECheckInID {
            get {
                return this.ECheckInIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ECheckInIDField, value) != true)) {
                    this.ECheckInIDField = value;
                    this.RaisePropertyChanged("ECheckInID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<TIM.Devices.Framework.TIMsDevices.Payloads, object> Payload {
            get {
                return this.PayloadField;
            }
            set {
                if ((object.ReferenceEquals(this.PayloadField, value) != true)) {
                    this.PayloadField = value;
                    this.RaisePropertyChanged("Payload");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RangeOfCheckInIDsID {
            get {
                return this.RangeOfCheckInIDsIDField;
            }
            set {
                if ((this.RangeOfCheckInIDsIDField.Equals(value) != true)) {
                    this.RangeOfCheckInIDsIDField = value;
                    this.RaisePropertyChanged("RangeOfCheckInIDsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServiceEmployeeID {
            get {
                return this.ServiceEmployeeIDField;
            }
            set {
                if ((this.ServiceEmployeeIDField.Equals(value) != true)) {
                    this.ServiceEmployeeIDField = value;
                    this.RaisePropertyChanged("ServiceEmployeeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaRemovedEventArgs2", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Communication")]
    [System.SerializableAttribute()]
    public partial class MediaRemovedEventArgs2 : TIM.Devices.Framework.TIMsDevices.MediaDetectedEventArgs2 {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceCapabilities", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Common")]
    public enum DeviceCapabilities : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Identification = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vouchers = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payloads", Namespace="http://schemas.datacontract.org/2004/07/TIM.Devices.Framework.Common")]
    public enum Payloads : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MediaID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustCompanyID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMatrixField1 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMatrixField2 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataMatrixField3 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoucherIDWithCheckDigit = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EAN = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArticleID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CodeType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardData = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.meridianspa.de/TIM/DeviceFramework", ConfigurationName="TIMsDevices.IDeviceServer", CallbackContract=typeof(TIM.Devices.Framework.TIMsDevices.IDeviceServerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDeviceServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/AddIDeviceClient", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/AddIDeviceClientR" +
            "esponse")]
        int AddIDeviceClient(int intConfigDevices, string strName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/AddIDeviceClient2" +
            "", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/AddIDeviceClient2" +
            "Response")]
        int AddIDeviceClient2(int intConfigDevices, string strName, byte bytVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/GetDeviceNames", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/GetDeviceNamesRes" +
            "ponse")]
        string[] GetDeviceNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/Request", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/RequestResponse")]
        bool Request();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/UnblockLockerKey", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/UnblockLockerKeyR" +
            "esponse")]
        bool UnblockLockerKey(int deviceFrameworkDeviceID, bool unblock);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/FireMediaDetected" +
            "")]
        void FireMediaDetected(TIM.Devices.Framework.TIMsDevices.MediaDetectedEventArgs e);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/FireMediaDetected" +
            "2")]
        void FireMediaDetected2(TIM.Devices.Framework.TIMsDevices.MediaDetectedEventArgs2 e);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/FireMediaRemoved")]
        void FireMediaRemoved(TIM.Devices.Framework.TIMsDevices.MediaRemovedEventArgs e);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/FireMediaRemoved2" +
            "")]
        void FireMediaRemoved2(TIM.Devices.Framework.TIMsDevices.MediaRemovedEventArgs2 e);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/FireMissingMedia")]
        void FireMissingMedia(string strDeviceName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/ReleaseResources")]
        void ReleaseResources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/IsFloating", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/IsFloatingRespons" +
            "e")]
        bool IsFloating();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/Pong", ReplyAction="http://schemas.meridianspa.de/TIM/DeviceFramework/IDeviceServer/PongResponse")]
        void Pong();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceServerChannel : TIM.Devices.Framework.TIMsDevices.IDeviceServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceServerClient : System.ServiceModel.DuplexClientBase<TIM.Devices.Framework.TIMsDevices.IDeviceServer>, TIM.Devices.Framework.TIMsDevices.IDeviceServer {
        
        public DeviceServerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DeviceServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DeviceServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceServerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int AddIDeviceClient(int intConfigDevices, string strName) {
            return base.Channel.AddIDeviceClient(intConfigDevices, strName);
        }
        
        public int AddIDeviceClient2(int intConfigDevices, string strName, byte bytVersion) {
            return base.Channel.AddIDeviceClient2(intConfigDevices, strName, bytVersion);
        }
        
        public string[] GetDeviceNames() {
            return base.Channel.GetDeviceNames();
        }
        
        public bool Request() {
            return base.Channel.Request();
        }
        
        public bool UnblockLockerKey(int deviceFrameworkDeviceID, bool unblock) {
            return base.Channel.UnblockLockerKey(deviceFrameworkDeviceID, unblock);
        }
    }
}
