#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TIM.Devices.Framework.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MatrixZero")]
	public partial class TIMDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertComputerSetting(ComputerSetting instance);
    partial void UpdateComputerSetting(ComputerSetting instance);
    partial void DeleteComputerSetting(ComputerSetting instance);
    partial void InsertSubsidiary(Subsidiary instance);
    partial void UpdateSubsidiary(Subsidiary instance);
    partial void DeleteSubsidiary(Subsidiary instance);
    partial void InsertAssemblyType(AssemblyType instance);
    partial void UpdateAssemblyType(AssemblyType instance);
    partial void DeleteAssemblyType(AssemblyType instance);
    partial void InsertDevice(Device instance);
    partial void UpdateDevice(Device instance);
    partial void DeleteDevice(Device instance);
    partial void InsertDevicesDetail(DevicesDetail instance);
    partial void UpdateDevicesDetail(DevicesDetail instance);
    partial void DeleteDevicesDetail(DevicesDetail instance);
    partial void InsertServiceEmployeeGroup(ServiceEmployeeGroup instance);
    partial void UpdateServiceEmployeeGroup(ServiceEmployeeGroup instance);
    partial void DeleteServiceEmployeeGroup(ServiceEmployeeGroup instance);
    partial void InsertServiceEmployee(ServiceEmployee instance);
    partial void UpdateServiceEmployee(ServiceEmployee instance);
    partial void DeleteServiceEmployee(ServiceEmployee instance);
    #endregion
		
		public TIMDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TIMDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TIMDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TIMDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ComputerSettingQuery> ComputerSettingQueries
		{
			get
			{
				return this.GetTable<ComputerSettingQuery>();
			}
		}
		
		public System.Data.Linq.Table<SettingDetail> SettingDetails
		{
			get
			{
				return this.GetTable<SettingDetail>();
			}
		}
		
		public System.Data.Linq.Table<ComputerSetting> ComputerSettings
		{
			get
			{
				return this.GetTable<ComputerSetting>();
			}
		}
		
		public System.Data.Linq.Table<Subsidiary> Subsidiaries
		{
			get
			{
				return this.GetTable<Subsidiary>();
			}
		}
		
		public System.Data.Linq.Table<AssemblyType> AssemblyTypes
		{
			get
			{
				return this.GetTable<AssemblyType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigDevicesDetailsEmployee> ConfigDevicesDetailsEmployees
		{
			get
			{
				return this.GetTable<ConfigDevicesDetailsEmployee>();
			}
		}
		
		public System.Data.Linq.Table<ConfigDevicesDetailsExternal> ConfigDevicesDetailsExternals
		{
			get
			{
				return this.GetTable<ConfigDevicesDetailsExternal>();
			}
		}
		
		public System.Data.Linq.Table<ConfigDevicesDetailsInHouse> ConfigDevicesDetailsInHouses
		{
			get
			{
				return this.GetTable<ConfigDevicesDetailsInHouse>();
			}
		}
		
		public System.Data.Linq.Table<Device> Device
		{
			get
			{
				return this.GetTable<Device>();
			}
		}
		
		public System.Data.Linq.Table<DevicesDetail> DevicesDetail
		{
			get
			{
				return this.GetTable<DevicesDetail>();
			}
		}
		
		public System.Data.Linq.Table<ServiceEmployeeGroup> ServiceEmployeeGroups
		{
			get
			{
				return this.GetTable<ServiceEmployeeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ServiceEmployee> ServiceEmployees
		{
			get
			{
				return this.GetTable<ServiceEmployee>();
			}
		}
		
		internal System.Data.Linq.Table<QryServiceEmployee> QryServiceEmployees
		{
			get
			{
				return this.GetTable<QryServiceEmployee>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSearchElectronicKey")]
		public int spSearchElectronicKey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeviceID", DbType="Int")] System.Nullable<int> deviceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ECheckInID", DbType="NVarChar(4000)")] string eCheckInID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubsidiaryID", DbType="Int")] System.Nullable<int> subsidiaryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PersonID", DbType="BigInt")] ref System.Nullable<long> personID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceEmployeeID", DbType="Int")] ref System.Nullable<int> serviceEmployeeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RangeOfCheckInIDsID", DbType="Int")] ref System.Nullable<int> rangeOfCheckInIDsID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckInID", DbType="Int")] ref System.Nullable<int> checkInID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deviceID, eCheckInID, subsidiaryID, personID, serviceEmployeeID, rangeOfCheckInIDsID, checkInID);
			personID = ((System.Nullable<long>)(result.GetParameterValue(3)));
			serviceEmployeeID = ((System.Nullable<int>)(result.GetParameterValue(4)));
			rangeOfCheckInIDsID = ((System.Nullable<int>)(result.GetParameterValue(5)));
			checkInID = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDailyCheckExecuteManually")]
		public int spDailyCheckExecuteManually([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] string strComputerNameID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> blnDailyCheckWasExecuted, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] ref string strError)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strComputerNameID, blnDailyCheckWasExecuted, strError);
			blnDailyCheckWasExecuted = ((System.Nullable<bool>)(result.GetParameterValue(1)));
			strError = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qryComputerSettings")]
	public partial class ComputerSettingQuery
	{
		
		private string _ComputerNameID;
		
		private string _ComputerSettingID;
		
		private string _ComputerSettingDescription;
		
		private string _ComputerDetailSettingID;
		
		private string _ComputerDetailSettingDescription;
		
		private bool _CanBeEditedFlag;
		
		private string _Value;
		
		public ComputerSettingQuery()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerNameID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerNameID
		{
			get
			{
				return this._ComputerNameID;
			}
			set
			{
				if ((this._ComputerNameID != value))
				{
					this._ComputerNameID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerSettingID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerSettingID
		{
			get
			{
				return this._ComputerSettingID;
			}
			set
			{
				if ((this._ComputerSettingID != value))
				{
					this._ComputerSettingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerSettingDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerSettingDescription
		{
			get
			{
				return this._ComputerSettingDescription;
			}
			set
			{
				if ((this._ComputerSettingDescription != value))
				{
					this._ComputerSettingDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerDetailSettingID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerDetailSettingID
		{
			get
			{
				return this._ComputerDetailSettingID;
			}
			set
			{
				if ((this._ComputerDetailSettingID != value))
				{
					this._ComputerDetailSettingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerDetailSettingDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComputerDetailSettingDescription
		{
			get
			{
				return this._ComputerDetailSettingDescription;
			}
			set
			{
				if ((this._ComputerDetailSettingDescription != value))
				{
					this._ComputerDetailSettingDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeEditedFlag", DbType="Bit NOT NULL")]
		public bool CanBeEditedFlag
		{
			get
			{
				return this._CanBeEditedFlag;
			}
			set
			{
				if ((this._CanBeEditedFlag != value))
				{
					this._CanBeEditedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSettingDetails")]
	public partial class SettingDetail
	{
		
		private string _SettingID;
		
		private string _SettingDetailID;
		
		private string _Description;
		
		private string _Value;
		
		public SettingDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this._SettingID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingDetailID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SettingDetailID
		{
			get
			{
				return this._SettingDetailID;
			}
			set
			{
				if ((this._SettingDetailID != value))
				{
					this._SettingDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblComputerSettings")]
	public partial class ComputerSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ComputerNameID;
		
		private string _ComputerSettingID;
		
		private string _ComputerDetailSettingID;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComputerNameIDChanging(string value);
    partial void OnComputerNameIDChanged();
    partial void OnComputerSettingIDChanging(string value);
    partial void OnComputerSettingIDChanged();
    partial void OnComputerDetailSettingIDChanging(string value);
    partial void OnComputerDetailSettingIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public ComputerSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerNameID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComputerNameID
		{
			get
			{
				return this._ComputerNameID;
			}
			set
			{
				if ((this._ComputerNameID != value))
				{
					this.OnComputerNameIDChanging(value);
					this.SendPropertyChanging();
					this._ComputerNameID = value;
					this.SendPropertyChanged("ComputerNameID");
					this.OnComputerNameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerSettingID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComputerSettingID
		{
			get
			{
				return this._ComputerSettingID;
			}
			set
			{
				if ((this._ComputerSettingID != value))
				{
					this.OnComputerSettingIDChanging(value);
					this.SendPropertyChanging();
					this._ComputerSettingID = value;
					this.SendPropertyChanged("ComputerSettingID");
					this.OnComputerSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerDetailSettingID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComputerDetailSettingID
		{
			get
			{
				return this._ComputerDetailSettingID;
			}
			set
			{
				if ((this._ComputerDetailSettingID != value))
				{
					this.OnComputerDetailSettingIDChanging(value);
					this.SendPropertyChanging();
					this._ComputerDetailSettingID = value;
					this.SendPropertyChanged("ComputerDetailSettingID");
					this.OnComputerDetailSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubsidiaries")]
	public partial class Subsidiary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubsidiaryID;
		
		private int _CompanyID;
		
		private string _SubsidiaryName;
		
		private string _Street;
		
		private string _ZIP;
		
		private string _City;
		
		private string _BankName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubsidiaryIDChanging(int value);
    partial void OnSubsidiaryIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnSubsidiaryNameChanging(string value);
    partial void OnSubsidiaryNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnZIPChanging(string value);
    partial void OnZIPChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    #endregion
		
		public Subsidiary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubsidiaryID
		{
			get
			{
				return this._SubsidiaryID;
			}
			set
			{
				if ((this._SubsidiaryID != value))
				{
					this.OnSubsidiaryIDChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryID = value;
					this.SendPropertyChanged("SubsidiaryID");
					this.OnSubsidiaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string SubsidiaryName
		{
			get
			{
				return this._SubsidiaryName;
			}
			set
			{
				if ((this._SubsidiaryName != value))
				{
					this.OnSubsidiaryNameChanging(value);
					this.SendPropertyChanging();
					this._SubsidiaryName = value;
					this.SendPropertyChanged("SubsidiaryName");
					this.OnSubsidiaryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string ZIP
		{
			get
			{
				return this._ZIP;
			}
			set
			{
				if ((this._ZIP != value))
				{
					this.OnZIPChanging(value);
					this.SendPropertyChanging();
					this._ZIP = value;
					this.SendPropertyChanged("ZIP");
					this.OnZIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAssemblyTypes")]
	public partial class AssemblyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Assembly;
		
		private string _Name;
		
		private string _Namespace;
		
		private bool _Singleton;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssemblyChanging(string value);
    partial void OnAssemblyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNamespaceChanging(string value);
    partial void OnNamespaceChanged();
    partial void OnSingletonChanging(bool value);
    partial void OnSingletonChanged();
    #endregion
		
		public AssemblyType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Assembly]", Storage="_Assembly", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Assembly
		{
			get
			{
				return this._Assembly;
			}
			set
			{
				if ((this._Assembly != value))
				{
					this.OnAssemblyChanging(value);
					this.SendPropertyChanging();
					this._Assembly = value;
					this.SendPropertyChanged("Assembly");
					this.OnAssemblyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespace", DbType="NChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singleton", DbType="Bit NOT NULL")]
		public bool Singleton
		{
			get
			{
				return this._Singleton;
			}
			set
			{
				if ((this._Singleton != value))
				{
					this.OnSingletonChanging(value);
					this.SendPropertyChanging();
					this._Singleton = value;
					this.SendPropertyChanged("Singleton");
					this.OnSingletonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qryConfigDevicesDetailsEmployees")]
	public partial class ConfigDevicesDetailsEmployee
	{
		
		private int _DeviceID;
		
		private string _Description;
		
		private string _RequiredSoftwareComponent;
		
		private byte _Order;
		
		private int _SubsidiaryID;
		
		private bool _ActivatedFlag;
		
		private int _DeviceKeyTypeID;
		
		public ConfigDevicesDetailsEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL")]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this._DeviceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredSoftwareComponent", DbType="VarChar(50)")]
		public string RequiredSoftwareComponent
		{
			get
			{
				return this._RequiredSoftwareComponent;
			}
			set
			{
				if ((this._RequiredSoftwareComponent != value))
				{
					this._RequiredSoftwareComponent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryID", DbType="Int NOT NULL")]
		public int SubsidiaryID
		{
			get
			{
				return this._SubsidiaryID;
			}
			set
			{
				if ((this._SubsidiaryID != value))
				{
					this._SubsidiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this._ActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceKeyTypeID", DbType="Int NOT NULL")]
		public int DeviceKeyTypeID
		{
			get
			{
				return this._DeviceKeyTypeID;
			}
			set
			{
				if ((this._DeviceKeyTypeID != value))
				{
					this._DeviceKeyTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qryConfigDevicesDetailsExternal")]
	public partial class ConfigDevicesDetailsExternal
	{
		
		private int _DeviceID;
		
		private string _Description;
		
		private string _RequiredSoftwareComponent;
		
		private byte _Order;
		
		private int _SubsidiaryID;
		
		private bool _ActivatedFlag;
		
		private int _DeviceKeyTypeID;
		
		public ConfigDevicesDetailsExternal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL")]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this._DeviceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredSoftwareComponent", DbType="VarChar(50)")]
		public string RequiredSoftwareComponent
		{
			get
			{
				return this._RequiredSoftwareComponent;
			}
			set
			{
				if ((this._RequiredSoftwareComponent != value))
				{
					this._RequiredSoftwareComponent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryID", DbType="Int NOT NULL")]
		public int SubsidiaryID
		{
			get
			{
				return this._SubsidiaryID;
			}
			set
			{
				if ((this._SubsidiaryID != value))
				{
					this._SubsidiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this._ActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceKeyTypeID", DbType="Int NOT NULL")]
		public int DeviceKeyTypeID
		{
			get
			{
				return this._DeviceKeyTypeID;
			}
			set
			{
				if ((this._DeviceKeyTypeID != value))
				{
					this._DeviceKeyTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qryConfigDevicesDetailsInHouse")]
	public partial class ConfigDevicesDetailsInHouse
	{
		
		private int _DeviceID;
		
		private string _Description;
		
		private string _RequiredSoftwareComponent;
		
		private byte _Order;
		
		private int _SubsidiaryID;
		
		private bool _ActivatedFlag;
		
		private int _DeviceKeyTypeID;
		
		public ConfigDevicesDetailsInHouse()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL")]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this._DeviceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredSoftwareComponent", DbType="VarChar(50)")]
		public string RequiredSoftwareComponent
		{
			get
			{
				return this._RequiredSoftwareComponent;
			}
			set
			{
				if ((this._RequiredSoftwareComponent != value))
				{
					this._RequiredSoftwareComponent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubsidiaryID", DbType="Int NOT NULL")]
		public int SubsidiaryID
		{
			get
			{
				return this._SubsidiaryID;
			}
			set
			{
				if ((this._SubsidiaryID != value))
				{
					this._SubsidiaryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this._ActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceKeyTypeID", DbType="Int NOT NULL")]
		public int DeviceKeyTypeID
		{
			get
			{
				return this._DeviceKeyTypeID;
			}
			set
			{
				if ((this._DeviceKeyTypeID != value))
				{
					this._DeviceKeyTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDevices")]
	public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeviceID;
		
		private string _Description;
		
		private int _DeviceKeyTypeID;
		
		private bool _SupportsWaiterLockFlag;
		
		private EntitySet<DevicesDetail> _DevicesDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeviceKeyTypeIDChanging(int value);
    partial void OnDeviceKeyTypeIDChanged();
    partial void OnSupportsWaiterLockFlagChanging(bool value);
    partial void OnSupportsWaiterLockFlagChanged();
    #endregion
		
		public Device()
		{
			this._DevicesDetail = new EntitySet<DevicesDetail>(new Action<DevicesDetail>(this.attach_DevicesDetail), new Action<DevicesDetail>(this.detach_DevicesDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceKeyTypeID", DbType="Int NOT NULL")]
		public int DeviceKeyTypeID
		{
			get
			{
				return this._DeviceKeyTypeID;
			}
			set
			{
				if ((this._DeviceKeyTypeID != value))
				{
					this.OnDeviceKeyTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceKeyTypeID = value;
					this.SendPropertyChanged("DeviceKeyTypeID");
					this.OnDeviceKeyTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportsWaiterLockFlag", DbType="Bit NOT NULL")]
		public bool SupportsWaiterLockFlag
		{
			get
			{
				return this._SupportsWaiterLockFlag;
			}
			set
			{
				if ((this._SupportsWaiterLockFlag != value))
				{
					this.OnSupportsWaiterLockFlagChanging(value);
					this.SendPropertyChanging();
					this._SupportsWaiterLockFlag = value;
					this.SendPropertyChanged("SupportsWaiterLockFlag");
					this.OnSupportsWaiterLockFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_DevicesDetail", Storage="_DevicesDetail", ThisKey="DeviceID", OtherKey="DeviceID")]
		public EntitySet<DevicesDetail> DevicesDetail
		{
			get
			{
				return this._DevicesDetail;
			}
			set
			{
				this._DevicesDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DevicesDetail(DevicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_DevicesDetail(DevicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDevicesDetails")]
	public partial class DevicesDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeviceDetailID;
		
		private int _DeviceID;
		
		private string _Description;
		
		private string _RequiredSoftwareComponent;
		
		private byte _Order;
		
		private EntityRef<Device> _Device;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceDetailIDChanging(int value);
    partial void OnDeviceDetailIDChanged();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRequiredSoftwareComponentChanging(string value);
    partial void OnRequiredSoftwareComponentChanged();
    partial void OnOrderChanging(byte value);
    partial void OnOrderChanged();
    #endregion
		
		public DevicesDetail()
		{
			this._Device = default(EntityRef<Device>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeviceDetailID
		{
			get
			{
				return this._DeviceDetailID;
			}
			set
			{
				if ((this._DeviceDetailID != value))
				{
					this.OnDeviceDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceDetailID = value;
					this.SendPropertyChanged("DeviceDetailID");
					this.OnDeviceDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL")]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredSoftwareComponent", DbType="VarChar(50)")]
		public string RequiredSoftwareComponent
		{
			get
			{
				return this._RequiredSoftwareComponent;
			}
			set
			{
				if ((this._RequiredSoftwareComponent != value))
				{
					this.OnRequiredSoftwareComponentChanging(value);
					this.SendPropertyChanging();
					this._RequiredSoftwareComponent = value;
					this.SendPropertyChanged("RequiredSoftwareComponent");
					this.OnRequiredSoftwareComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="TinyInt NOT NULL")]
		public byte Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_DevicesDetail", Storage="_Device", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.DevicesDetail.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.DevicesDetail.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(int);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblServiceEmployeeGroups")]
	public partial class ServiceEmployeeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceEmployeeGroupID;
		
		private string _Description;
		
		private int _ColorID;
		
		private bool _ActivatedFlag;
		
		private EntitySet<ServiceEmployee> _ServiceEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceEmployeeGroupIDChanging(int value);
    partial void OnServiceEmployeeGroupIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnColorIDChanging(int value);
    partial void OnColorIDChanged();
    partial void OnActivatedFlagChanging(bool value);
    partial void OnActivatedFlagChanged();
    #endregion
		
		public ServiceEmployeeGroup()
		{
			this._ServiceEmployees = new EntitySet<ServiceEmployee>(new Action<ServiceEmployee>(this.attach_ServiceEmployees), new Action<ServiceEmployee>(this.detach_ServiceEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceEmployeeGroupID
		{
			get
			{
				return this._ServiceEmployeeGroupID;
			}
			set
			{
				if ((this._ServiceEmployeeGroupID != value))
				{
					this.OnServiceEmployeeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceEmployeeGroupID = value;
					this.SendPropertyChanged("ServiceEmployeeGroupID");
					this.OnServiceEmployeeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="Int NOT NULL")]
		public int ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this.OnActivatedFlagChanging(value);
					this.SendPropertyChanging();
					this._ActivatedFlag = value;
					this.SendPropertyChanged("ActivatedFlag");
					this.OnActivatedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceEmployeeGroup_ServiceEmployee", Storage="_ServiceEmployees", ThisKey="ServiceEmployeeGroupID", OtherKey="ServiceEmployeeGroupID")]
		public EntitySet<ServiceEmployee> ServiceEmployees
		{
			get
			{
				return this._ServiceEmployees;
			}
			set
			{
				this._ServiceEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceEmployees(ServiceEmployee entity)
		{
			this.SendPropertyChanging();
			entity.ServiceEmployeeGroup = this;
		}
		
		private void detach_ServiceEmployees(ServiceEmployee entity)
		{
			this.SendPropertyChanging();
			entity.ServiceEmployeeGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblServiceEmployees")]
	public partial class ServiceEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceEmployeeID;
		
		private long _PersonID;
		
		private string _Description;
		
		private int _ServiceEmployeeGroupID;
		
		private int _DepartmentID;
		
		private bool _PrescriptionFlag;
		
		private string _Remark;
		
		private string _ADLoginName;
		
		private bool _ActivatedFlag;
		
		private string _CreatePersonID;
		
		private System.DateTime _CreateDate;
		
		private string _ChangePersonID;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<decimal> _RatePerMinute;
		
		private string _DisplayName;
		
		private EntityRef<ServiceEmployeeGroup> _ServiceEmployeeGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceEmployeeIDChanging(int value);
    partial void OnServiceEmployeeIDChanged();
    partial void OnPersonIDChanging(long value);
    partial void OnPersonIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceEmployeeGroupIDChanging(int value);
    partial void OnServiceEmployeeGroupIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    partial void OnPrescriptionFlagChanging(bool value);
    partial void OnPrescriptionFlagChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnADLoginNameChanging(string value);
    partial void OnADLoginNameChanged();
    partial void OnActivatedFlagChanging(bool value);
    partial void OnActivatedFlagChanged();
    partial void OnCreatePersonIDChanging(string value);
    partial void OnCreatePersonIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangePersonIDChanging(string value);
    partial void OnChangePersonIDChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnRatePerMinuteChanging(System.Nullable<decimal> value);
    partial void OnRatePerMinuteChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public ServiceEmployee()
		{
			this._ServiceEmployeeGroup = default(EntityRef<ServiceEmployeeGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceEmployeeID
		{
			get
			{
				return this._ServiceEmployeeID;
			}
			set
			{
				if ((this._ServiceEmployeeID != value))
				{
					this.OnServiceEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceEmployeeID = value;
					this.SendPropertyChanged("ServiceEmployeeID");
					this.OnServiceEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="BigInt NOT NULL")]
		public long PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupID", DbType="Int NOT NULL")]
		public int ServiceEmployeeGroupID
		{
			get
			{
				return this._ServiceEmployeeGroupID;
			}
			set
			{
				if ((this._ServiceEmployeeGroupID != value))
				{
					if (this._ServiceEmployeeGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceEmployeeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceEmployeeGroupID = value;
					this.SendPropertyChanged("ServiceEmployeeGroupID");
					this.OnServiceEmployeeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionFlag", DbType="Bit NOT NULL")]
		public bool PrescriptionFlag
		{
			get
			{
				return this._PrescriptionFlag;
			}
			set
			{
				if ((this._PrescriptionFlag != value))
				{
					this.OnPrescriptionFlagChanging(value);
					this.SendPropertyChanging();
					this._PrescriptionFlag = value;
					this.SendPropertyChanged("PrescriptionFlag");
					this.OnPrescriptionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADLoginName", DbType="VarChar(50)")]
		public string ADLoginName
		{
			get
			{
				return this._ADLoginName;
			}
			set
			{
				if ((this._ADLoginName != value))
				{
					this.OnADLoginNameChanging(value);
					this.SendPropertyChanging();
					this._ADLoginName = value;
					this.SendPropertyChanged("ADLoginName");
					this.OnADLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this.OnActivatedFlagChanging(value);
					this.SendPropertyChanging();
					this._ActivatedFlag = value;
					this.SendPropertyChanged("ActivatedFlag");
					this.OnActivatedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatePersonID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatePersonID
		{
			get
			{
				return this._CreatePersonID;
			}
			set
			{
				if ((this._CreatePersonID != value))
				{
					this.OnCreatePersonIDChanging(value);
					this.SendPropertyChanging();
					this._CreatePersonID = value;
					this.SendPropertyChanged("CreatePersonID");
					this.OnCreatePersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePersonID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ChangePersonID
		{
			get
			{
				return this._ChangePersonID;
			}
			set
			{
				if ((this._ChangePersonID != value))
				{
					this.OnChangePersonIDChanging(value);
					this.SendPropertyChanging();
					this._ChangePersonID = value;
					this.SendPropertyChanged("ChangePersonID");
					this.OnChangePersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerMinute", DbType="Money")]
		public System.Nullable<decimal> RatePerMinute
		{
			get
			{
				return this._RatePerMinute;
			}
			set
			{
				if ((this._RatePerMinute != value))
				{
					this.OnRatePerMinuteChanging(value);
					this.SendPropertyChanging();
					this._RatePerMinute = value;
					this.SendPropertyChanged("RatePerMinute");
					this.OnRatePerMinuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceEmployeeGroup_ServiceEmployee", Storage="_ServiceEmployeeGroup", ThisKey="ServiceEmployeeGroupID", OtherKey="ServiceEmployeeGroupID", IsForeignKey=true)]
		public ServiceEmployeeGroup ServiceEmployeeGroup
		{
			get
			{
				return this._ServiceEmployeeGroup.Entity;
			}
			set
			{
				ServiceEmployeeGroup previousValue = this._ServiceEmployeeGroup.Entity;
				if (((previousValue != value) 
							|| (this._ServiceEmployeeGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceEmployeeGroup.Entity = null;
						previousValue.ServiceEmployees.Remove(this);
					}
					this._ServiceEmployeeGroup.Entity = value;
					if ((value != null))
					{
						value.ServiceEmployees.Add(this);
						this._ServiceEmployeeGroupID = value.ServiceEmployeeGroupID;
					}
					else
					{
						this._ServiceEmployeeGroupID = default(int);
					}
					this.SendPropertyChanged("ServiceEmployeeGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.qryServiceEmployees")]
	internal partial class QryServiceEmployee
	{
		
		private int _ServiceEmployeeID;
		
		private long _PersonID;
		
		private string _Description;
		
		private int _ServiceEmployeeGroupID;
		
		private int _DepartmentID;
		
		private bool _PrescriptionFlag;
		
		private string _Remark;
		
		private string _ADLoginName;
		
		private bool _ActivatedFlag;
		
		private string _FirstName;
		
		private string _SecondName;
		
		private string _Name;
		
		private string _NameAndDescription;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<bool> _Sex;
		
		private string _ServiceEmployeeGroupDescription;
		
		private System.Nullable<int> _ServiceEmployeeGroupColorID;
		
		private System.Nullable<bool> _ServiceEmployeeGroupActivatedFlag;
		
		private string _DepartmentDescription;
		
		private System.Nullable<bool> _ServiceEmployeeAndPersonActivatedFlag;
		
		private System.Nullable<bool> _CheckedInFlag;
		
		private System.Nullable<decimal> _RatePerMinute;
		
		private string _DisplayName;
		
		private string _StandardName;
		
		public QryServiceEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeID", DbType="Int NOT NULL")]
		public int ServiceEmployeeID
		{
			get
			{
				return this._ServiceEmployeeID;
			}
			set
			{
				if ((this._ServiceEmployeeID != value))
				{
					this._ServiceEmployeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="BigInt NOT NULL")]
		public long PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupID", DbType="Int NOT NULL")]
		public int ServiceEmployeeGroupID
		{
			get
			{
				return this._ServiceEmployeeGroupID;
			}
			set
			{
				if ((this._ServiceEmployeeGroupID != value))
				{
					this._ServiceEmployeeGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this._DepartmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionFlag", DbType="Bit NOT NULL")]
		public bool PrescriptionFlag
		{
			get
			{
				return this._PrescriptionFlag;
			}
			set
			{
				if ((this._PrescriptionFlag != value))
				{
					this._PrescriptionFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADLoginName", DbType="VarChar(50)")]
		public string ADLoginName
		{
			get
			{
				return this._ADLoginName;
			}
			set
			{
				if ((this._ADLoginName != value))
				{
					this._ADLoginName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedFlag", DbType="Bit NOT NULL")]
		public bool ActivatedFlag
		{
			get
			{
				return this._ActivatedFlag;
			}
			set
			{
				if ((this._ActivatedFlag != value))
				{
					this._ActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(50)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this._SecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(155)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAndDescription", DbType="VarChar(155)")]
		public string NameAndDescription
		{
			get
			{
				return this._NameAndDescription;
			}
			set
			{
				if ((this._NameAndDescription != value))
				{
					this._NameAndDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupDescription", DbType="VarChar(50)")]
		public string ServiceEmployeeGroupDescription
		{
			get
			{
				return this._ServiceEmployeeGroupDescription;
			}
			set
			{
				if ((this._ServiceEmployeeGroupDescription != value))
				{
					this._ServiceEmployeeGroupDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupColorID", DbType="Int")]
		public System.Nullable<int> ServiceEmployeeGroupColorID
		{
			get
			{
				return this._ServiceEmployeeGroupColorID;
			}
			set
			{
				if ((this._ServiceEmployeeGroupColorID != value))
				{
					this._ServiceEmployeeGroupColorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeGroupActivatedFlag", DbType="Bit")]
		public System.Nullable<bool> ServiceEmployeeGroupActivatedFlag
		{
			get
			{
				return this._ServiceEmployeeGroupActivatedFlag;
			}
			set
			{
				if ((this._ServiceEmployeeGroupActivatedFlag != value))
				{
					this._ServiceEmployeeGroupActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDescription", DbType="VarChar(50)")]
		public string DepartmentDescription
		{
			get
			{
				return this._DepartmentDescription;
			}
			set
			{
				if ((this._DepartmentDescription != value))
				{
					this._DepartmentDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeAndPersonActivatedFlag", DbType="Bit")]
		public System.Nullable<bool> ServiceEmployeeAndPersonActivatedFlag
		{
			get
			{
				return this._ServiceEmployeeAndPersonActivatedFlag;
			}
			set
			{
				if ((this._ServiceEmployeeAndPersonActivatedFlag != value))
				{
					this._ServiceEmployeeAndPersonActivatedFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedInFlag", DbType="Bit")]
		public System.Nullable<bool> CheckedInFlag
		{
			get
			{
				return this._CheckedInFlag;
			}
			set
			{
				if ((this._CheckedInFlag != value))
				{
					this._CheckedInFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerMinute", DbType="Money")]
		public System.Nullable<decimal> RatePerMinute
		{
			get
			{
				return this._RatePerMinute;
			}
			set
			{
				if ((this._RatePerMinute != value))
				{
					this._RatePerMinute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="VarChar(155)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this._StandardName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
